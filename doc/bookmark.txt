bookmark*.txt*
===============================================================================
CONTENTS			        	*bookmark-help-contents*

Commands      |bookmark-commands|
Functions     |bookmark-functions|
Functions     |bookmark-options|

==============================================================================
Commands 			        	*bookmark-commands*

						    	*:BookmarkAdd*
:BookmarkAdd [tag]
			Add the current file to the bookmark with filename {tag}, which is
			`default` if ommited.

						    	*:BookmarkAdd*
:BookmarkAddPos [tag]
            Add the current file, affixed with current line number, to the
            bookmark with filename {tag}, which is `default` if ommited.

						    	*:BookmarkDel*
:BookmarkDel [tag]
            Delete the current file from the bookmark with filename {tag}, which
            is `default` if ommited.

						    	*:BookmarkDelPos*
:BookmarkDelPos [tag]
            Delete the current file, affixed with current line number, from the
            bookmark with filename {tag}, which is `default` if ommited.

						    	*:BookmarkGo*
:BookmarkGo [tag]
            Display the bookmark file with filename {tag}, which is `default` if
            ommited. Pressing `<cr>` in the bookmark buffer brings you to the
            selected file. You can also edit the bookmark file inside the
            buffer.

==============================================================================
Functions			        	*bookmark-functions*

                                *bookmark#list()*
bookmark#list([tag]) The result is a list, containing the content of the
                     bookmark file with the name tag.  If tag is omitted,
                     'default' is used. This can be used with othe fuzzy finder:

>
    call fzf#run(fzf#wrap({'source': bookmark#list()}))

                                *bookmark#open()*
bookmark#open([cmd]) No return value. Open the bookmark under cursor with `cmd`.
                     If `cmd` is omitted, |g:bookmark_opencmd|, is used.


>
    autocmd Filetype bookmark nmap <buffer> <c-t> <cmd>call bookmark#open('tabedit')<cr>

==============================================================================
Options				            *bookmark-options*

                                 *g:bookmark_dir*
g:bookmark_dir          string (default: ~/.vim/bookmark)
    Directory containing bookmark files.

                                 *g:bookmark_opencmd*
g:bookmark_opencmd          string (default: |edit|)
    Command to open the selected bookmark using |BookmarkGo|.

                                 *g:Bookmark_pos_context_fn*
g:Bookmark_pos_context_fn   function(default: |bookmark#pos_context_fn|)
    A customized function that returns a list of string to be appended after
    the bookmark plus position string. Each iterm in the list will be
    prefixxed with `#`, the comment token for the bookmark file. The default
    function return the content of the current line.

==============================================================================
vim:tw=78:et:ft=help:norl:
